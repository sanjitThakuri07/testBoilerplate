configName, backendUrl, tableTitle, deleteEndpoint => remove , 
add tableIndicator



tableIndicator=> {
       backendUrl: "",
    sectionTitle: "",
    buttonName: "",
    frontEndUrl: "",
    editFrontEndUrlGetter: null,
    deleteFieldName: "",
    subSectionUrl: null,
    popUpField: { key: "", label: "" },
    showAddButton: true,
}

onView => for viewing table row data, => gives the whole row data
onEdit => for editing purposes, => gives the whole row data
onDelete => custom onDelete => gives the whole row data
onDataChange=> querys, urlUtils
urlUtils=> pagination datasets,
setterFunction => tableActionIndicator ()

tableControls => to show, hide => edit, delete, restore, Duplicate
            => either an object or a function.

navigateTitle => object, navigates to column => specially for view/ edit, primary column 
tableOptions =>{
    chipOptionsName => selecting default chip styles.
    columnName => select hitting to api actions
}


exampleModal:{
    edit:edit_modal,
    delete:delete_modal,
    create:create_modal,
    view:view_modal,
}

permissions => from backend
permission=> permission to give to that table => static => {

}

FilterComponent => callbackfunction with filterModal, setFielterModal => should return a jsx
filterChildren => takes a component => with filtered option value

allowFilter=> {filter:boolean, className: styling, filteredOptionLength}